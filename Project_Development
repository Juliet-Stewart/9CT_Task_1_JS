# Assessment Task 1
>### By Juliet Stewart
___
>## Requirements




I am to program a ev3 robot to find and retrieve two coloured blocks. While doing this, I must ensure the robot **doesn't** collide with the remaining blocks.
To do this, the robot must be able to:
- **Object Detection: Ultrasonic sensor detects object within 10 cm/Colour Detection: Colour sensor analyses the colour of object**
  - The robot gets within 10cm of an object. The ultrasonic sensor detects the object. Robot beeps and checks the object colour. If red or yellow, object will be collected. If blue or green, turn 90Â° and avoid obstacle.
- **Object Grabbing: The robot spears the correct coloured objects.**
  - The robot encounters either the red or yellow object. The colour sensor checks colour. The robot will then spear the object. The object is grabbed and the robot can continue moving.
- **Object Retrieval: The robot is able to hold and bring object back to *START* zone**
  - Robot has both objects secure. Due to the method of retrieval, the robot will not be able to move backwards. The robot moves back towards the *START* zone. Both objects end up in the correct place.




### Test Cases
| Test Case | Input     | Expected Output   |
|---------- |---------- |----------------   |
| Robot Detects Object | Robot uses ultrasonic sensor to detect an object  <10cm away  | Robot beeps when object is detected |
|Avoids Object           |Ultrasonic Sensor detects object <10cm away           |Check colour*                   |
|*Checks colour           |Colour sensor checks colour of object           |Robot grabs object if red or yellow, and avoids it if blue or green                   |
|Grabs object           |Colour sensor returns colour as red or yellow         |Robot spears the object, capturing it                   |
|Retrieves Object                       |N/A                   |Robot returns both objects to the *START* zone




### Non-Functional Requirements
- Touch sensor must be activated for the code to start.
- When an object is detected by ultrasonic sensor, the robot *beeps*.
- Ensure robot is accurate when block is skewered.




>## Design
### Flowcharts/Pseudocode
![Main Routine Flowchart](MainRoutine.png "Main Routine")
### Main Routine Pseudocode
~~~
BEGIN Main
  CALL DetectObject
END
~~~
![Detect Object Flowchart](DetectObject.png "Detect Object")
### Detect Object Pseudocode
~~~
BEGIN DetectObject
  DECLARE integer distance
  INPUT distance
  WHILE distance > 100
      Drive forward
      INPUT distance
  ENDWHILE
  Stop
  CALL DetectColour
  Drive backwards 50mm
END
~~~
![Detect Colour Flowchart](DetectColour.png "Detect Colour")
~~~
BEGIN DetectColour
  DECLARE string colour
  INPUT colour
  IF colour = "red"
    CALL GrabObject
  ELSE
    IF colour = "yellow"
      CALL GrabObject
    ELSE
END
~~~

>## Development and Integration
```Python

#Python Code Emma Has

```

>## Testing and Debugging
## Test Case - Robot Detects Colour
### The robot is able to detect the block's colour and either grab it or avoid it
- ### Failure Of The Colour Sensor
  #### Early in our testing, we immediately realised the colour sensor was not going to work where it is. Following the black line would either cause the robot to collide with the green block, or cause the robot to be off the sheet entirely. We looked into other places we could put the colour sensor: beneath the robot caused the sensor to be sideways, interfering with the results. Anywhere near the front would cause it to interfere with the ultrasonic sensor. Above **all this**, we realised that getting the placement specifically right so both the colour and ultrasonic sensor could detect the block was unrealistic. It was then that we decided to scrap the colour sensor, knowing time was not on our side and implementing this sensor was unrealistic for us.
### The code would've been better if we had somehow implemented the colour sensor, but ultimately I believe it was the right decision not to include it.


```
```
## Test Case - Robot Avoids Object
### The robot can avoid the blue and green blocks
- ### Hard Coding The Robot
  #### After failures with the sensors, we made the decision to hard code the robot. Although this isn't the best way to code it, it works, which is all we need for now. However, even simply hardcoding the robot proved to be difficult. Measurements we entered into the code didn't necessarily work on the mat. And so this was quite tedious to code. *Thanks to Emma for working on this part.* This will ensure that the robot will correctly and consistently avoid the blue and green blocks.
### Yes, it would've been better if we used the colour and ultrasonic sensor, but hard coding it felt like the right way to go. Yes, if we had more time, we would try harder to automate it, but overall time management could've been better.
 ```
```
## Test Case - Robot Detects Object
### The robot uses the ultrasonic sensor to detect a nearby object
- ### Ultrasonic Is Complicated
   #### Having already decided to hard code our robot, we wanted to keep things simple, leaving out the ultrasonic sensor
```
```
- ## Test Case - Robot Grabs Object
### The robot must be able to grab and hold two blocks
- ### Developing The First Grabber
  #### So while Emma and Evelyn worked on hard coding the robot, I was tasked with constructing the grabber for our robot. This grabber was the first of three designs. This design features a one sided grabber intended to catch the block and funnel it toward the centre. It was shaped similarly to half a hexagon.


- ### Developing The Second Grabber
  #### Once again, this funnel was on one side of the robot. However, this grabber stuck outwards more, and was straighter. This grabber would've probably sufficed, but it was mistakenly disassembled at the end of the lesson.


- ### Developing The Final Grabber
  #### The 'Stag beetle' was the final grabber design. It had two, long lego technic blocks reaching out ahead of it, looking much like its name. This grabber was long enough, grabbed blocks, and held them in place.


### The final grabber works really well and can retrieve both blocks. It did take quite a while to get this final design, but thanks to our failures, we have improved on previous mistakes.


```
```
- ## Test Case - Begin The Code
- ### Implementing The Touch Sensor
  #### As our code required the use of two sensors, using the touch sensor was highly important. In the lesson, our group were working on getting measurements right to fulfill the requirements (Getting the robot to avoid the blue block). I took it upon myself to get the touch sensor to start the program. Thankfully, this worked the first time, and ensured we included at least one sensor in our code.
### This was a highly beneficial step in our code. With the touch sensor functioning, we have 1 working sensor in our code. And on top of that, it worked on the first try, making our lives so much easier.
>## Evaluation
### Peer Evaluation: Emma

*When rating 1-5 with 1 being lacklustre effort and 5 being outstanding effort, how much effort do you feel this group member put into this project?* **5/5**

*Explain the reason for this score in detail:*
**Emma helped soo much and did a large portion of the coding. Taking the time to test and redo all those measurements is outstanding. She kept doing things the entire time and didn't catch a break. Thankyou so much Emma.**


*When rating 1-5 with 1 being not at all and 5 being an exceptional amount, how much did this team member contribute to the team's efforts throughout this project?* **5/5**

*Explain the reason for this score in detail:*
**Obviously, coding all that isn't easy. For her to do all that, predominately on her own is incredible. She stuck with it for the entire time and never gave up.**


*When rating 1-5 with 1 being not well at all and 5 being exceptionally well, how well do you think this team member performed throughout all stages of the project?* **5/5**

Explain the reason for this score in detail:
**Throughout the entire project, Emma was working hard. She put so much effort in and we wouldn't have finished on time without her.**
~~~
~~~
### Peer Evaluation: Evelyn

*When rating 1-5 with 1 being lacklustre effort and 5 being outstanding effort, how much effort do you feel this group member put into this project?* **5/5**

*Explain the reason for this score in detail:*
**Evelyn was extremely helpful throughout the project. She not only helped with testing and debugging, but helped me with my GitHub.**


*When rating 1-5 with 1 being not at all and 5 being an exceptional amount, how much did this team member contribute to the team's efforts throughout this project?* **5/5**

*Explain the reason for this score in detail:*
**Evelyn was like the glue that kept our group together. She helped me witht the construction of the grabbers, and helped Emma with coding the robot.**


*When rating 1-5 with 1 being not well at all and 5 being exceptionally well, how well do you think this team member performed throughout all stages of the project?* **5/5**

Explain the reason for this score in detail:
**Evelyn was a huge help the entire time, offerring a different perspective to problems.**



*When rating 1-5 with 1 being entirely non-functional and 5 being completely functional, how effective was this team's final test case?* **3.5/5**


*Explain the reason for this score in detail:*
**Not properly including the ultrasonic sensor really bothers me. Emma insisted that it's ok as long as it's called, but I have doubts. The rest of our code was successful and worked with little to no inconsistencies. But, hard coding it isn't the way I'd prefer to complete this task.**
